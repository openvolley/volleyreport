[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrien Ickowicz. Author, maintainer. Ben Raymond. Author. Tyler Widdison. Author. Francesco Oleni. Contributor. Willem de Wit. Contributor. Marco Chiapello. Contributor. Felipe Aparecido Lima. Contributor. openvolley.org. Originator.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ickowicz , Raymond B, Widdison T (2023). volleyreport: Reports Volleyball Match Files. https://volleyreport.openvolley.org, https://github.com/openvolley/volleyreport.","code":"@Manual{,   title = {volleyreport: Reports from Volleyball Match Files},   author = {Adrien Ickowicz and Ben Raymond and Tyler Widdison},   year = {2023},   note = {https://volleyreport.openvolley.org, https://github.com/openvolley/volleyreport}, }"},{"path":"/index.html","id":"volleyreport","dir":"","previous_headings":"","what":"Reports from Volleyball Match Files","title":"Reports from Volleyball Match Files","text":"volleyreport package provides functions generating reports volleyball match files.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Reports from Volleyball Match Files","text":"","code":"options(repos = c(openvolley = \"https://openvolley.r-universe.dev\",                   CRAN = \"https://cloud.r-project.org\"))  install.packages(\"volleyreport\")  ## or  ## install.packages(\"remotes\") ## if needed remotes::install_github(\"openvolley/volleyreport\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Reports from Volleyball Match Files","text":"give something like:  beach file:","code":"## read dv file library(datavolley) library(volleyreport) x <- dv_read(dv_example_file())  ## generate the report rpt <- vr_match_summary(x, style = \"ov1\", format = \"paged_pdf\")"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. datavolley dv_example_file","code":""},{"path":"/reference/volleyreport.html","id":null,"dir":"Reference","previous_headings":"","what":"volleyreport — volleyreport","title":"volleyreport — volleyreport","text":"Reporting volleyball statistics","code":""},{"path":"/reference/vr_attack.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate attack table — vr_attack","title":"Generate attack table — vr_attack","text":"Generate attack table","code":""},{"path":"/reference/vr_attack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate attack table — vr_attack","text":"","code":"vr_attack(x, team, by = \"player\", file_type = \"indoor\", style = \"default\")"},{"path":"/reference/vr_attack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate attack table — vr_attack","text":"x datavolleyplays: plays component object returned datavolley::read_dv team string: team name string: \"player\" \"set\" file_type string: \"indoor\", \"perana_indoor\", \"beach\", \"perana_beach\" style string: see vr_match_summary()","code":""},{"path":"/reference/vr_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate block table — vr_block","title":"Generate block table — vr_block","text":"Generate block table","code":""},{"path":"/reference/vr_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate block table — vr_block","text":"","code":"vr_block(x, team, by = \"player\", style = \"default\")"},{"path":"/reference/vr_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate block table — vr_block","text":"x datavolleyplays: plays component object returned datavolley::read_dv team string: team name string: \"player\" \"set\" style string: see vr_match_summary()","code":""},{"path":"/reference/vr_court_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Court plots — vr_court_plots","title":"Court plots — vr_court_plots","text":"Court plots","code":""},{"path":"/reference/vr_court_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Court plots — vr_court_plots","text":"","code":"vr_court_plots(x, ...)"},{"path":"/reference/vr_court_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Court plots — vr_court_plots","text":"x datavolley string: returned datavolley::dv_read, path file ... : passed downstream functions","code":""},{"path":"/reference/vr_court_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Court plots — vr_court_plots","text":"ggplot object","code":""},{"path":"/reference/vr_court_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Court plots — vr_court_plots","text":"","code":"vr_court_plots(dv_example_file())"},{"path":"/reference/vr_match_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate single-page match summary report — vr_match_summary","title":"Generate single-page match summary report — vr_match_summary","text":"Generate single-page match summary report","code":""},{"path":"/reference/vr_match_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate single-page match summary report — vr_match_summary","text":"","code":"vr_match_summary(   x,   outfile,   refx,   vote = TRUE,   format = \"html\",   icon = NULL,   css = vr_css(),   remove_nonplaying = TRUE,   style = \"default\",   court_plots_function = \"vr_court_plots\",   court_plots_args = list(),   plot_icons,   skill_evaluation_decode = \"guess\",   shiny_progress = FALSE,   chrome_print_extra_args = NULL,   ... )  vr_css()"},{"path":"/reference/vr_match_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate single-page match summary report — vr_match_summary","text":"x datavolley string: returned datavolley::dv_read, path file outfile string: path file produce (specified, create file temporary directory) refx data.frame: choices style require reference data set calculate e.g. expected . comparison matches (e.g. matches league), data.frame plays components matches. missing, expected BP replaced reception serve efficiency vote logical: include vote report component? explicitly specified, vote might set FALSE depending style format string: \"pdf\" (using latex-based PDF), \"paged_pdf\" (using pagedown-based PDF), \"png\", \"paged_png\", \"html\" icon string: (optional) filename icon image use css list: css specifications elements, giving (currently fairly limited) control appearance. See output vr_css example. Note styling seem applied exporting PDF remove_nonplaying logical: TRUE, remove players team summaries take court style string: can \"default\" - standard FIVB match report \"ov1\" - modified version \"default\" score evolution plot, different breakdown rotation, changes court_plots_function string function: function, name function, takes datavolley object produces plot object. Supply function override court plots included report values style court_plots_args list: named list arguments pass court plot function plot_icons logical data.frame: values style include plots various kinds report. Currently plot_icons defaults TRUE style = \"ov1\", otherwise FALSE. Set plot_icons FALSE icons, TRUE use icons specified vr_plot_icons(), data.frame returned vr_plot_icons() control icons used. Note (free) fontawesome icons supported skill_evaluation_decode : datavolley::dv_read() shiny_progress logical: TRUE, report generation process issue shiny::setProgress() calls. call vr_match_summary therefore wrapped shiny::withProgress() scope chrome_print_extra_args character: additional parameters pass extra_args pagedown::chrome_print() (relevant using \"paged_*\" format) ... : additional parameters passed rmarkdown template","code":""},{"path":"/reference/vr_match_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate single-page match summary report — vr_match_summary","text":"path report file","code":""},{"path":"/reference/vr_match_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate single-page match summary report — vr_match_summary","text":"","code":"if (FALSE) {   f <- vr_match_summary(dv_example_file(), format = \"paged_pdf\")   if (interactive()) browseURL(f) }"},{"path":"/reference/vr_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate points table — vr_points","title":"Generate points table — vr_points","text":"Generate points table","code":""},{"path":"/reference/vr_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate points table — vr_points","text":"","code":"vr_points(x, team, by = \"player\", vote = FALSE, style = \"default\")"},{"path":"/reference/vr_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate points table — vr_points","text":"x datavolleyplays: plays component object returned datavolley::read_dv team string: team name string: \"player\" \"set\" vote logical: TRUE, include vote detail style string: see vr_match_summary()","code":""},{"path":"/reference/vr_reception.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate reception table — vr_reception","title":"Generate reception table — vr_reception","text":"Generate reception table","code":""},{"path":"/reference/vr_reception.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate reception table — vr_reception","text":"","code":"vr_reception(   x,   team,   by = \"player\",   refx,   style = \"default\",   file_type = \"indoor\" )"},{"path":"/reference/vr_reception.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate reception table — vr_reception","text":"x datavolleyplays: plays component object returned datavolley::read_dv team string: team name string: \"player\" \"set\" refx data.frame: see vr_match_summary() style string: see vr_match_summary() file_type string: \"indoor\", \"perana_indoor\", \"beach\", \"perana_beach\"","code":""},{"path":"/reference/vr_score_evplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Score evolution plot — vr_plot_icons","title":"Score evolution plot — vr_plot_icons","text":"Score evolution plot","code":""},{"path":"/reference/vr_score_evplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score evolution plot — vr_plot_icons","text":"","code":"vr_plot_icons()  vr_score_evplot(   x,   with_summary = FALSE,   icons = FALSE,   home_colour = \"darkblue\",   visiting_colour = \"darkred\",   low_colour = \"#800000\",   mid_colour = \"#202020\",   high_colour = \"#008000\",   font_size = 12 )"},{"path":"/reference/vr_score_evplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score evolution plot — vr_plot_icons","text":"x datavolley string: returned datavolley::dv_read, path file with_summary logical: TRUE, show team summary statistics. beach, end; indoor summaries set icons logical data.frame: either FALSE icons, TRUE use icons specified vr_plot_icons(), data.frame returned vr_plot_icons(). Note (free) fontawesome icons supported home_colour string: colour home team visiting_colour string: colour visiting team low_colour, mid_colour, high_colour string: colours low, mid, high performance (used with_summary ) font_size scalar: font size","code":""},{"path":"/reference/vr_score_evplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score evolution plot — vr_plot_icons","text":"ggplot object","code":""},{"path":"/reference/vr_score_evplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score evolution plot — vr_plot_icons","text":"","code":"vr_score_evplot(dv_example_file())"},{"path":"/reference/vr_serve.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate serve table — vr_serve","title":"Generate serve table — vr_serve","text":"Generate serve table","code":""},{"path":"/reference/vr_serve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate serve table — vr_serve","text":"","code":"vr_serve(x, team, by = \"player\", refx, style = \"default\")"},{"path":"/reference/vr_serve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate serve table — vr_serve","text":"x datavolleyplays: plays component object returned datavolley::read_dv team string: team name string: \"player\" \"set\" refx data.frame: see vr_match_summary() style string: see vr_match_summary()","code":""},{"path":"/reference/vr_vote.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate vote — vr_vote","title":"Calculate vote — vr_vote","text":"Calculate vote","code":""},{"path":"/reference/vr_vote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate vote — vr_vote","text":"","code":"vr_vote(x, team)"},{"path":"/reference/vr_vote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate vote — vr_vote","text":"x datavolleyplays: plays component object returned datavolley::read_dv team string: team name","code":""}]
